<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- ========================= Bean的命名 ============ start-->

    <!-- 指定id，必须在Ioc容器中唯一；-->
    <!-- <bean id="hello" class="spring.HelloImpl"></bean>-->

    <!-- 不指定id，只配置必须的全限定类名，由IoC容器为其生成一个标识，
    客户端必须通过接口“T getBean(Class<T> requiredType)”获取Bean；-->
    <!--<bean class="spring.HelloImpl"/>-->
    <!-- 指定name，这样name就是“标识符”，必须在Ioc容器中唯一；-->
    <!--<bean name="bean" class="spring.HelloImpl"/>-->
    <!--指定id和name，id就是标识符，而name就是别名，必须在Ioc容器中唯一；-->
    <!--<bean id="bean1" name="alias1" class="spring.HelloImpl"/>-->
    <!-- 如果id和name一样，IoC容器能检测到，并消除冲突 -->
    <!--<bean id="bean3" name="bean3" class="spring.HelloImpl"/>-->
    <!--指定多个name，多个name用“，”、“；”、“ ”分割，第一个被用作标识符，其他的（alias1、alias2、alias3）是别名，所有标识符也必须在Ioc容器中唯一；-->
    <!--<bean name="bean1;alias11,alias12;alias13 alias14" class="spring.HelloImpl"/>-->
    <!-- 当指定id时，name指定的标识符全部为别名 -->
    <!--<bean id="bean2" name="alias21;alias22" class="spring.HelloImpl"/>-->
    <!--使用<alias>标签指定别名，别名也必须在IoC容器中唯一-->
    <!--<bean name="bean" class="spring.HelloImpl"/>-->
    <!--<alias alias="alias1" name="bean"/>-->
    <!--<alias alias="alias2" name="bean"/>-->

    <!-- ========================= Bean的命名 ============ end-->

    <!-- ========================= 实例化Bean ============ start-->

    <!--使用默认构造参数-->
    <bean name="bean1" class="spring.HelloImpl2"/>
    <!--使用有参数构造参数-->

    <bean name="bean2" class="spring.HelloImpl2">
        <!-- 指定构造器参数 -->
        <constructor-arg index="0" value="Hello Spring!"/>
    </bean>

    <!-- 使用静态工厂方法 -->
    <bean id="bean3" class="spring.factory.HelloApiStaticFactory" factory-method="newInstance">
        <constructor-arg index="0" value="Hello Spring!"/>
    </bean>

    <!--1、定义实例工厂Bean -->
    <bean id="beanInstanceFactory"
          class="spring.factory.HelloApiInstanceFactory"/>
    <!--2、使用实例工厂Bean创建Bean-->
    <bean id="bean4"
          factory-bean="beanInstanceFactory"
          factory-method="newInstance">
        <constructor-arg index="0" value="Hello Spring!"></constructor-arg>
    </bean>
    <!-- ========================= 实例化Bean ============ end-->


</beans>

























